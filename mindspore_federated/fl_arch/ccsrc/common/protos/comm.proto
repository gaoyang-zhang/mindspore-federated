/**
 * Copyright 2022 Huawei Technologies Co., Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
package mindspore.fl;

enum NodeCommand {
  ROUND_REQUEST = 0;
  COLLECTIVE_SEND_DATA = 1;
  //
  SERVER_BROADCAST_EVENT = 2;
  //
  SERVER_PING = 3;
  SERVER_PONG = 4;
  //
  GET_MODEL_WEIGHT = 5;
  //
  BROADCAST_MODEL_WEIGHT = 6;
  //
  SERVER_PULL_WEIGHT = 8;
}

enum NodeRole {
  SERVER = 0;
  WORKER = 1;
  SCHEDULER = 2;
}

message CollectiveMessageMeta {
  bool enable_flag = 1;
  string send_node = 2;
  string recv_node = 3;
  uint64 iteration = 4;
  bytes weight_name = 5;
  bytes phase = 6; // ring, gather, reduce, broadcast
  uint32 chunk_index = 7;
  uint32 for_index = 8;
}

message MessageMeta {
  // the command of this message,for example: register,heartbeat,data
  NodeCommand cmd = 1;
  // the request id of this message
  uint64 request_id = 2;
  // the role of the current node: worker,server,scheduler
  NodeRole role = 3;
  // User-defined commands
  int32 user_cmd = 5;
  uint64 iteration_num = 7;
  string send_node = 8;
  string recv_node = 9;

  CollectiveMessageMeta collective_meta = 6;
  string response_error = 10;
}

message ServerBroadcastMessage {
  enum BroadcastEventType {
    COUNT_EVENT = 0;
  }
  BroadcastEventType type = 1;
  uint64 cur_iteration_num = 2;
  // for COUNT_FIRST_EVENT and COUNT_LAST_EVENT
  string count_name = 3;
  bool trigger_first = 4;
  bool trigger_last = 5;
}

message ProtoParams {
  string name = 1;
  bytes data = 2;
  repeated int64 shape = 3;
  string type = 4;
  bool requires_aggr = 5;
}

enum InstanceState {
  kStateRunning = 0;
  kStateDisable = 1;
  kStateFinish = 2;
}

message ProtoModel {
  string fl_name = 1;
  string instance_name = 2;
  uint64 iteration_num = 3;
  InstanceState instance_state = 4;
  repeated ProtoParams weights = 5;
}

message GetModelWeightResponse {
  ProtoModel model = 1;
}

message GeneralResponseMsg {
  bool is_success = 1;
  string error = 2;
}
