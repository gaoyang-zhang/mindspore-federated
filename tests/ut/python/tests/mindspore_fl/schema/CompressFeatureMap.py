# automatically generated by the FlatBuffers compiler, do not modify

# namespace: schema

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CompressFeatureMap(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CompressFeatureMap()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCompressFeatureMap(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def CompressFeatureMapBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x46\x4C\x4A\x30", size_prefixed=size_prefixed)

    # CompressFeatureMap
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CompressFeatureMap
    def WeightFullname(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CompressFeatureMap
    def CompressData(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # CompressFeatureMap
    def CompressDataAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int8Flags, o)
        return 0

    # CompressFeatureMap
    def CompressDataLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CompressFeatureMap
    def CompressDataIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # CompressFeatureMap
    def MinVal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # CompressFeatureMap
    def MaxVal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(4)
def CompressFeatureMapStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddWeightFullname(builder, weightFullname): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(weightFullname), 0)
def CompressFeatureMapAddWeightFullname(builder, weightFullname):
    """This method is deprecated. Please switch to AddWeightFullname."""
    return AddWeightFullname(builder, weightFullname)
def AddCompressData(builder, compressData): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(compressData), 0)
def CompressFeatureMapAddCompressData(builder, compressData):
    """This method is deprecated. Please switch to AddCompressData."""
    return AddCompressData(builder, compressData)
def StartCompressDataVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def CompressFeatureMapStartCompressDataVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCompressDataVector(builder, numElems)
def AddMinVal(builder, minVal): builder.PrependFloat32Slot(2, minVal, 0.0)
def CompressFeatureMapAddMinVal(builder, minVal):
    """This method is deprecated. Please switch to AddMinVal."""
    return AddMinVal(builder, minVal)
def AddMaxVal(builder, maxVal): builder.PrependFloat32Slot(3, maxVal, 0.0)
def CompressFeatureMapAddMaxVal(builder, maxVal):
    """This method is deprecated. Please switch to AddMaxVal."""
    return AddMaxVal(builder, maxVal)
def End(builder): return builder.EndObject()
def CompressFeatureMapEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)