# automatically generated by the FlatBuffers compiler, do not modify

# namespace: schema

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RequestFLJob(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RequestFLJob()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRequestFLJob(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def RequestFLJobBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x46\x4C\x4A\x30", size_prefixed=size_prefixed)

    # RequestFLJob
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RequestFLJob
    def FlName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RequestFLJob
    def FlId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RequestFLJob
    def Iteration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # RequestFLJob
    def DataSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # RequestFLJob
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RequestFLJob
    def SignData(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # RequestFLJob
    def SignDataAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # RequestFLJob
    def SignDataLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # RequestFLJob
    def SignDataIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # RequestFLJob
    def KeyAttestation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RequestFLJob
    def EquipCert(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RequestFLJob
    def EquipCaCert(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RequestFLJob
    def RootCert(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # RequestFLJob
    def DownloadCompressTypes(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # RequestFLJob
    def DownloadCompressTypesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int8Flags, o)
        return 0

    # RequestFLJob
    def DownloadCompressTypesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # RequestFLJob
    def DownloadCompressTypesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        return o == 0

    # RequestFLJob
    def EvalDataSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(12)
def RequestFLJobStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddFlName(builder, flName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(flName), 0)
def RequestFLJobAddFlName(builder, flName):
    """This method is deprecated. Please switch to AddFlName."""
    return AddFlName(builder, flName)
def AddFlId(builder, flId): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(flId), 0)
def RequestFLJobAddFlId(builder, flId):
    """This method is deprecated. Please switch to AddFlId."""
    return AddFlId(builder, flId)
def AddIteration(builder, iteration): builder.PrependInt32Slot(2, iteration, 0)
def RequestFLJobAddIteration(builder, iteration):
    """This method is deprecated. Please switch to AddIteration."""
    return AddIteration(builder, iteration)
def AddDataSize(builder, dataSize): builder.PrependInt32Slot(3, dataSize, 0)
def RequestFLJobAddDataSize(builder, dataSize):
    """This method is deprecated. Please switch to AddDataSize."""
    return AddDataSize(builder, dataSize)
def AddTimestamp(builder, timestamp): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(timestamp), 0)
def RequestFLJobAddTimestamp(builder, timestamp):
    """This method is deprecated. Please switch to AddTimestamp."""
    return AddTimestamp(builder, timestamp)
def AddSignData(builder, signData): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(signData), 0)
def RequestFLJobAddSignData(builder, signData):
    """This method is deprecated. Please switch to AddSignData."""
    return AddSignData(builder, signData)
def StartSignDataVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def RequestFLJobStartSignDataVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartSignDataVector(builder, numElems)
def AddKeyAttestation(builder, keyAttestation): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(keyAttestation), 0)
def RequestFLJobAddKeyAttestation(builder, keyAttestation):
    """This method is deprecated. Please switch to AddKeyAttestation."""
    return AddKeyAttestation(builder, keyAttestation)
def AddEquipCert(builder, equipCert): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(equipCert), 0)
def RequestFLJobAddEquipCert(builder, equipCert):
    """This method is deprecated. Please switch to AddEquipCert."""
    return AddEquipCert(builder, equipCert)
def AddEquipCaCert(builder, equipCaCert): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(equipCaCert), 0)
def RequestFLJobAddEquipCaCert(builder, equipCaCert):
    """This method is deprecated. Please switch to AddEquipCaCert."""
    return AddEquipCaCert(builder, equipCaCert)
def AddRootCert(builder, rootCert): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(rootCert), 0)
def RequestFLJobAddRootCert(builder, rootCert):
    """This method is deprecated. Please switch to AddRootCert."""
    return AddRootCert(builder, rootCert)
def AddDownloadCompressTypes(builder, downloadCompressTypes): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(downloadCompressTypes), 0)
def RequestFLJobAddDownloadCompressTypes(builder, downloadCompressTypes):
    """This method is deprecated. Please switch to AddDownloadCompressTypes."""
    return AddDownloadCompressTypes(builder, downloadCompressTypes)
def StartDownloadCompressTypesVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def RequestFLJobStartDownloadCompressTypesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartDownloadCompressTypesVector(builder, numElems)
def AddEvalDataSize(builder, evalDataSize): builder.PrependInt32Slot(11, evalDataSize, 0)
def RequestFLJobAddEvalDataSize(builder, evalDataSize):
    """This method is deprecated. Please switch to AddEvalDataSize."""
    return AddEvalDataSize(builder, evalDataSize)
def End(builder): return builder.EndObject()
def RequestFLJobEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
